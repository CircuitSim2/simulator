package gui;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.border.LineBorder;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

import circuit.SeriesCircuit;

public class ElementSelectedEvent extends MouseAdapter
{
	private MainDispApp disp;

	public ElementSelectedEvent(MainDispApp disp)
	{
		this.disp = disp;
	}

	public void mouseClicked(MouseEvent e)
	{
		for(int i = 0;i < disp.mainCircuit.getElem().length;i++)
		{
			if(e.getComponent() == disp.labelElement[i])
			{
				disp.labelElement[i].setBorder(new LineBorder(new Color(0, 0, 0), 2));
			}

			else if(e.getComponent() == disp.labelElementParallel[i])
			{
				disp.labelElementParallel[i].setBorder(new LineBorder(new Color(0, 0, 0), 2));
			}

			else
			{
				disp.labelElement[i].setBorder(null);
				disp.labelElementParallel[i].setBorder(null);
			}
		}

		//シミュレーションモードの時に素子が選択されたらグラフを表示
		if(disp.isSimulationMode)
		{
			if(disp.mainCircuit instanceof SeriesCircuit)
    		{
				//電圧の取得
				try
				{
					disp.mainCircuit.setVoltage(Double.parseDouble(disp.textFieldVoltage.getText()));
				}
				catch(Exception ex)
				{
					disp.mainCircuit.setVoltage(1);
					disp.textFieldVoltage.setText("1");
				}
	    			for(int i = 0;i < 6;i++)
	    			{
	    				try{
	    					disp.mainCircuit.getElem(i).setValue(Double.parseDouble(disp.textFieldElement[i].getText()));
	    				}
	    				catch(Exception ex)
	    				{
	    					disp.mainCircuit.getElem(i).setValue(0);
	    				}
	    			}

	    			((SeriesCircuit) disp.mainCircuit).calcCurrent();
	    			((SeriesCircuit) disp.mainCircuit).calcVoltage(0);

	    	    	XYSeriesCollection data = new XYSeriesCollection();
	    	    	XYSeries series = new XYSeries("current");

	    	    	if(disp.radioButtonCurrent.isSelected())
	    	    	{
		    	    	for(int i = 0; i < (disp.mainCircuit.getSimulationEndTime() / disp.mainCircuit.dt);i++)
		    	    	{
		    	    		series.add(i * disp.mainCircuit.dt ,((SeriesCircuit)disp.mainCircuit).getCurrentList().get(i));
		    	    	}
	    	    	}

	    	    	else if(disp.radioButtonVoltage.isSelected())
	    	    	{
		    	    	for(int i = 0; i < (disp.mainCircuit.getSimulationEndTime() / disp.mainCircuit.dt);i++)
		    	    	{
		    	    		series.add(i * disp.mainCircuit.dt ,((SeriesCircuit)disp.mainCircuit).getVoltList().get(i));
		    	    	}
	    	    	}

	    	    	data.addSeries(series);

	    			JFreeChart chart =
	    					ChartFactory.createXYLineChart(
	    				            null,                      // chart title
	    				            "Time[s]",                // x axis label
	    				            null,    // y axis label
	    				            data,                  // data
	    				            PlotOrientation.VERTICAL,
	    				            true,                     // include legend
	    				            true,                     // tooltips
	    				            false                     // urls
	    				            );

	    			disp.panelGraph.setChart(chart);
    		}
		}
	}
}
