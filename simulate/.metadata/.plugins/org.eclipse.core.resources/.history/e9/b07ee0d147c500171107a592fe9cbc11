package circuit;

import java.util.ArrayList;

//回路の情報を格納するクラス(直列)

public class SeriesCircuit
{
	private Element elem[]; //配置されている素子
	private double RSum;    //抵抗の値の合計
	private double LSum;    //インダクタンスの合計
	private double CinvSum; //キャパシタンスの逆数の合計
	private double voltage; //回路の電圧
	private ArrayList<Double> currentList; //電流の値のList

	//コンストラクタ
	public SeriesCircuit()
	{
		this.elem = new Element[6];
		for(int i = 0; i < 6; i++)
		{
			elem[i] = new Element(0, ElemType.LINE);
		}
		
		this.RSum = 0;
		this.LSum = 0;
		this.CinvSum = 0;
		this.voltage = 0;
	}

	//セッター
	public void setVoltage(double E)
	{
		this.voltage = E;
	}
	
	public void setElem(int num, double value, ElemType et)
	{
		this.elem[num] = new Element(value, et);
	}
	
	public void setElem(int num, Element elem)
	{
		this.elem[num] = elem;
	}
	
	//ゲッター
	public ArrayList<Double> getCurrentList()
	{
		return this.currentList;
	}
	
	//素子の値をまとめる
	public void elemSum()
	{
		for(Element elem : elem)
		{
			switch(elem.getEt())
			{
				case RESISTANCE:
					RSum += elem.getValue();
					break;

				case CAPACITANCE:
					CinvSum += 1 / elem.getValue();
					break;

				case INDUCTANCE:
					LSum += elem.getValue();
					break;
					
				default :
			}
		}
	}

	//電流を計算してリストに格納
	public void calcCurrent(double start, double end)
	{
		double dt = 0.01;
		double i = 0;
		double iSum = 0;
		int times = (int)((end - start) / dt);
		
		currentList = new ArrayList<Double>();
		
		elemSum();
		
		currentList.add(0.0);
		
		for(int j = 0;j < times;j++)
		{
			i = (voltage + LSum * i / dt - iSum * CinvSum) / (RSum + LSum / dt + dt * CinvSum);
			currentList.add(i);
			iSum += i * dt;
		}
	}
}
